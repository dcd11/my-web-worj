// function userInfo(userName, age) {
//     return `<p>Имя: ${userName}, Возраст: ${age}</p>`;    
// }
// console.log(userInfo("игорь", 33));

// 1. Сделайте функцию, выводящую на экран ваше имя.
function userName() {
    console.log("Игорь");
}
userName();

// 2. Сделайте функцию, выводящую на экран сумму чисел от 1 до 100.

function sum() {
    let res = 0;
for (let i = 1; i <= 100; i++) {
	res += i;
}
console.log(res);
}
sum();

// 3. Сделайте функцию, которая параметром принимает число и выводит на экран куб этого числа.
function cube(num) {
    num ** 3;
}
console.log(cube(5));

// 4. Сделайте функцию, которая параметром принимает число и проверяет, положительное это число или отрицательное. В первом случае пусть функция выводит на экран текст '+++', а во втором '---'.
function posOrNegNumbers(num) {
    if (num >= 0) {
        console.log("+++");
    } else {
        console.log("---");        
    }
    
}
posOrNegNumbers(-3)

// 5. Сделайте функцию, которая параметрами принимает 3 числа и выводит на экран сумму этих чисел.
function getSum(num1, num2, num3) {
    let result = num1 + num2 + num3;
    return result;
}
let sum1 = getSum(1, 993, 4);
console.log(sum1);

// 6. Сделайте функцию func, которая параметром будет принимать 3 переменных и выводить на экран сумму их значений. Пусть даны 3 переменные с числами:
// let param1 = 1;
// let param2 = 2;
// let param3 = 3;
// С помощью созданной вами функции выведите на экран сумму значений эти переменных.

function func(param1, param2, param3) {
    let result = param1 + param2 + param3;
    return result;
};
sum1 = func(1, 2, 3)
console.log(sum1);

// 7. Дана функция:
function func1(num = 5) {
console.log(num * num);
}
// Эта функция вызывается следующим образом:
func1(2); // результат будет 4 потому присвоили значение num = 2 и 2 * 2 = 4
func1(3); // результат будет 9 потому присвоили значение num = 3 и 3 * 3 = 9
func1(); // результат будет 25 потому значение по умолчанию 5 и 5 * 5 = 25
// Расскажите, каким будет результат каждого из вызовов функции.

// 8. Дана функция:

function func2(num1 = 0, num2 = 0) {
console.log(num1 + num2);
}

// Эта функция вызывается следующим образом:

func2(2, 3); // результат будет 5 потому присвоили значение num1 = 2 и num2 = 3 и 3 + 2 = 5
func2(3); // результат будет 3 потому присвоили значение num1 = 3 и num2 = 0 (по умолчанию) и 3 + 0 = 3
func2(); // результат будет 0 num1 = 0 и num2 = 0 (по умолчанию) и 0 + 0 = 0
// Расскажите, каким будет результат каждого из вызовов функции.

// 9. Сделайте функцию, которая параметром принимает число, а возвращает куб этого числа. С помощью этой функции найдите куб числа 3 и запишите его в переменную result.
function cube(num) {
    let result = num ** 3;
    return result;
}
console.log(cube(3));

// 10. Сделайте функцию, которая параметром принимает число, а возвращает квадратный корень из этого числа. С помощью этой функции найдите корень числа 3, затем найдите корень числа 4. Просуммируйте полученные результаты и выведите их на экран.
function squareRoot(a, b) {
    let result = Math.sqrt(a) + Math.sqrt(b)
    return result
}
console.log(squareRoot(4, 16));

// 11. Пусть у вас есть функция, возвращающая квадратный корень из числа, и функция, округляющая дробь до трех знаков в дробной части:

function sqrt(num) {
return Math.sqrt(num);
}
function round(num) {
return num.toFixed(3);
}
console.log(round(sqrt(2)));
// С помощью этих функций найдите квадратный корень из числа 2 и округлите его до трех знаков в дробной части.

// 12. Пусть у вас есть функция, возвращающая квадратный корень из числа, и функция, возвращающая сумму трех чисел:

function sqrt(num) {
return Math.sqrt(num);
}

function sum(num1, num2, num3) {
return num1 + num2 + num3;
}
result = sum(sqrt(2), sqrt(3), sqrt(4));
console.log(result);
// С помощью этих функций найдите сумму корней чисел 2, 3 и 4 и запишите ее в переменную result.

// 13. Пусть у вас есть функция, округляющая дробь до трех знаков в дробной части:

function round(num) {
return num.toFixed(3);
}
console.log(round(result));
// С помощью этой функции модифицируйте предыдущую задачу так, чтобы в переменную result записывалась дробь, округленная до 3-х знаков в дробной части.

// 14. Что выведется на экран в результате выполнения следующего кода:

function func(num) {
return num;

let result = num * num;
return result;
}

console.log(func(3)); // на экран выведется 3, потому что после выполнения return - фуннция не читается, return - это конецная стадия, вторая часть функции просто не выполняется. 

// Объясните почему.

// 15. Что выведет каждый из алертов в результате выполнения следующего кода:

function func(num) {
if (num <= 0) {
return Math.abs(num);
} else {
return num * num;
}
}

console.log( func(10) ); // выведет 100, потому что если число меньше или равно нулю то возвращаем абсолютное значение числа, если это не так, то умножаем само на себя как в нашем случае 10 умножить на 10 = 100
console.log( func(-5) ); // выведет 5, потому что если число меньше или равно нулю то возвращаем абсолютное значение числа и это 5. 

// Объясните почему.

// 16. Что выведет каждый из алертов в результате выполнения следующего кода:
// дубль задания 15
function func(num) {
if (num <= 0) {
return Math.abs(num);
}

return num * num;
}

console.log( func(10) );
console.log( func(-5) ); 

// Объясните почему.

// 17. Что выведется на экран в результате выполнения следующего кода:

function func10(num) {
let sum = 0;
for (let i = 1; i <= 5; i++) {
sum += i;
return sum;
}
}

console.log( func10(5) );

// Объясните почему. Что хотел сделать автор данного кода? Исправьте ошибку автора.

// 18*. Напишите функцию, которая параметром будет принимать число и делить его на 2 столько раз, пока результат не станет меньше 10. Пусть функция возвращает количество итераций, которое потребовалось для достижения результата.
// 19*. Сделайте функцию, которая параметром будет принимать массив с числами, и проверять, что все элементы в этом массиве являются четными числами.
// 20*. Сделайте функцию, которая параметром будет принимать число и проверять, что все цифры это числа являются нечетными.
// 21*. Сделайте функцию, которая параметром будет принимать массив и проверять, есть ли в этом массиве два одинаковых элемента подряд.